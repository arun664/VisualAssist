name: Deploy AI Navigation Assistant (Python)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Set permissions for GitHub token
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Verify Python project structure
      run: |
        echo "🤖 AI Navigation Assistant - Production Deployment"
        echo "Backend: ngrok service (https://flagless-clinographic-janita.ngrok-free.dev)"
        echo "Frontend: GitHub Pages"
        echo "Client: GitHub Pages"
        
    - name: Install Python dependencies for deployment
      run: |
        python -m pip install --upgrade pip
        # No additional dependencies needed for static file serving
        
    - name: Create deployment structure (dist)
      run: |
        echo "Creating dist directory and copying site files..."
        mkdir -p dist

        # Copy the frontend site files into dist, excluding index.html initially
        if [ -d frontend ]; then
          cp -r frontend/* dist/ || true
        fi

        # Copy client files under dist/client
        if [ -d client ]; then
          mkdir -p dist/client
          cp -r client/* dist/client/ || true
        fi

        # Rename frontend/index.html to frontend.html in dist
        if [ -f dist/index.html ]; then
          mv dist/index.html dist/frontend.html
          echo "Moved frontend index.html to frontend.html"
        fi

        # Create a lightweight root index that links to frontend.html
        cat > dist/index.html << 'EOF'
        <!doctype html>
        <html>
          <head>
            <meta charset="utf-8" />
            <meta http-equiv="refresh" content="0; url=./frontend.html" />
            <title>AI Navigation Assistant</title>
          </head>
          <body>
            <p>Redirecting to <a href="./frontend.html">AI Navigation Assistant</a>...</p>
          </body>
        </html>
        EOF

        # Copy configuration file to both frontend and client
        echo "⚙️ Copying configuration files..."
        if [ -f config.js ]; then
          cp config.js dist/
          cp config.js dist/client/
          echo "Configuration files copied"
        fi

        # Create .nojekyll file to disable Jekyll processing
        touch dist/.nojekyll

        echo "Deployment structure created. Files in dist:"
        find dist -maxdepth 2 -type f | sed -n '1,40p'
        
    - name: Update client configuration for GitHub Pages
      run: |
        # Update client to connect to ngrok backend
        sed -i 's/http:\/\/localhost:8000/https:\/\/flagless-clinographic-janita.ngrok-free.dev/g' dist/client/client.js
        
        # Client files are ready for deployment
        
    - name: Update frontend configuration for GitHub Pages  
      run: |
        # Update frontend to connect to ngrok backend
        sed -i 's/localhost:8000/flagless-clinographic-janita.ngrok-free.dev/g' dist/app.js
        
        # Frontend files are ready for deployment
        
    - name: Setup Pages
      if: github.ref == 'refs/heads/main'
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./dist
        
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      id: deployment
      uses: actions/deploy-pages@v4
        
    - name: Create deployment summary
      run: |
        echo "## 🚀 Deployment Complete!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📱 Live URLs:" >> $GITHUB_STEP_SUMMARY
        echo "- **Main Interface:** https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/" >> $GITHUB_STEP_SUMMARY
        echo "- **Frontend Monitor:** https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/frontend.html" >> $GITHUB_STEP_SUMMARY
        echo "- **Client Device:** https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/client/" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔧 Setup Complete:" >> $GITHUB_STEP_SUMMARY
        echo "1. Backend is running on ngrok: \`https://flagless-clinographic-janita.ngrok-free.dev\`" >> $GITHUB_STEP_SUMMARY
        echo "2. Open the live URLs above in your browser" >> $GITHUB_STEP_SUMMARY
        echo "3. Frontend and client automatically connect to ngrok backend" >> $GITHUB_STEP_SUMMARY