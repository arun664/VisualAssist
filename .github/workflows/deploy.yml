name: Deploy AI Navigation Assistant (Python)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Set permissions for GitHub token
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Verify Python project structure
      run: |
        echo "🐍 Python AI Navigation Assistant Project"
        echo "Backend requirements:"
        cat backend/requirements.txt
        echo ""
        echo "Project structure:"
        find . -name "*.py" | head -10
        
    - name: Install Python dependencies for deployment
      run: |
        python -m pip install --upgrade pip
        # No additional dependencies needed for static file serving
        
    - name: Create deployment structure (dist)
      run: |
        echo "Creating dist directory and copying site files..."
        mkdir -p dist

        # Copy the frontend site files into dist
        if [ -d frontend ]; then
          cp -r frontend/* dist/ || true
        fi

        # Copy client files under dist/client
        if [ -d client ]; then
          mkdir -p dist/client
          cp -r client/* dist/client/ || true
        fi

        # Ensure frontend.html exists in dist (use frontend/index.html if present)
        if [ -f frontend/index.html ]; then
          cp frontend/index.html dist/frontend.html
        fi

        # Create a lightweight root index that links to frontend.html
        cat > dist/index.html << 'EOF'
        <!doctype html>
        <html>
          <head>
            <meta charset="utf-8" />
            <meta http-equiv="refresh" content="0; url=./frontend.html" />
            <title>AI Navigation Assistant</title>
          </head>
          <body>
            <p>Redirecting to <a href="./frontend.html">AI Navigation Assistant</a>...</p>
          </body>
        </html>
        EOF

        echo "Deployment structure created. Files in dist:"
        find dist -maxdepth 2 -type f | sed -n '1,40p'
        
    - name: Update client configuration for GitHub Pages
      run: |
        # Update client to connect to local backend
        sed -i 's/http:\/\/localhost:8000/http:\/\/localhost:8000/g' dist/client/client.js
        
        # Add CORS handling note to client
        cat >> dist/client/index.html << 'EOF'
        
        <!-- GitHub Pages Deployment Notice -->
        <div style="position: fixed; top: 10px; right: 10px; background: rgba(255,193,7,0.9); color: black; padding: 10px; border-radius: 5px; font-size: 12px; max-width: 300px;">
            <strong>GitHub Pages Deployment</strong><br>
            Backend must be running locally on port 8000.<br>
            Enable CORS in your browser if needed.
        </div>
        EOF
        
    - name: Update frontend configuration for GitHub Pages  
      run: |
        # Update frontend to connect to local backend
        sed -i 's/localhost:8000/localhost:8000/g' dist/app.js
        
        # Add deployment notice to frontend
        cat >> dist/frontend.html << 'EOF'
        
        <!-- GitHub Pages Deployment Notice -->
        <div style="position: fixed; top: 10px; right: 10px; background: rgba(76,175,80,0.9); color: white; padding: 10px; border-radius: 5px; font-size: 12px; max-width: 300px; z-index: 9999;">
            <strong>Live Deployment</strong><br>
            Ensure backend is running locally on port 8000
        </div>
        EOF
        
    - name: Setup Pages
      if: github.ref == 'refs/heads/main'
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./dist
        
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      id: deployment
      uses: actions/deploy-pages@v4
        
    - name: Create deployment summary
      run: |
        echo "## 🚀 Deployment Complete!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📱 Live URLs:" >> $GITHUB_STEP_SUMMARY
        echo "- **Main Interface:** https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/" >> $GITHUB_STEP_SUMMARY
        echo "- **Frontend Monitor:** https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/frontend.html" >> $GITHUB_STEP_SUMMARY
        echo "- **Client Device:** https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/client/" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔧 Setup Required:" >> $GITHUB_STEP_SUMMARY
        echo "1. Run backend locally: \`cd backend && python main.py\`" >> $GITHUB_STEP_SUMMARY
        echo "2. Backend will be available on http://localhost:8000" >> $GITHUB_STEP_SUMMARY
        echo "3. Open the live URLs above in your browser" >> $GITHUB_STEP_SUMMARY
        echo "4. Follow the setup instructions on the main page" >> $GITHUB_STEP_SUMMARY