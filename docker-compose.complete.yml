version: '3.8'

services:
  ai-navigation-complete:
    build:
      context: .
      dockerfile: Dockerfile
    image: ai-navigation-complete:latest
    container_name: ai-navigation-complete
    ports:
      - "80:80"      # Default access (Frontend on port 80)
      - "3000:3000"  # Frontend on dedicated port
      - "3001:3001"  # Client on dedicated port
      - "8000:8000"  # Backend API (direct access)
    environment:
      - ENVIRONMENT=production
      - SERVER_HOST=127.0.0.1
      - SERVER_PORT=8000
      - FRONTEND_PORT=80
      - PYTHONPATH=/app/backend
      - YOLO_CONFIG_DIR=/app/backend/models
      - NUMBA_CACHE_DIR=/tmp/numba_cache
    volumes:
      # Persistent storage for logs and models
      - ./backend/logs:/app/backend/logs
      - ./backend/models:/app/backend/models
      # Use the updated nginx config
      - ./docker/updated-nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health", "||", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 90s
    networks:
      - ai-navigation-network

  # Development version with different ports
  ai-navigation-dev:
    build:
      context: .
      dockerfile: Dockerfile
    image: ai-navigation-complete:dev
    container_name: ai-navigation-dev
    ports:
      - "3000:3000"  # Frontend on port 3000
      - "3001:3001"  # Client on port 3001
      - "8001:8000"  # Backend on port 8001
    environment:
      - ENVIRONMENT=development
      - SERVER_HOST=127.0.0.1
      - SERVER_PORT=8000
      - FRONTEND_PORT=80
      - PYTHONPATH=/app/backend
    volumes:
      - ./backend/logs:/app/backend/logs
      - ./backend/models:/app/backend/models
      # Development: Mount source code for live editing
      - ./client:/app/client:ro
      - ./frontend:/app/frontend:ro
      - ./backend:/app/backend:ro
      # Use the updated nginx config
      - ./docker/updated-nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - ai-navigation-network
    profiles:
      - dev  # Only start with --profile dev

networks:
  ai-navigation-network:
    driver: bridge